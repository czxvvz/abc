1. Когда вы находитесь в сеансе gdb, как вы устанавливаете аргументы, которые будут передаваться программе при её запуске?

set args (задаёт аргументы, которые будут использоваться при следующем запуске, если аргументов нет, выполняется программа без аргументов)
show args (показывает аргументы, которые будут переданы программе при её вызове)

2. Как создать точку останова?

break main (устанавливает точку установа на входе в функцию main)

3. Как выполнить следующую строку кода С в программе после остановки в точке останова?

next (продолжает выполнение до следующей строки исходного текста в текущем, вызовы функций, которые появляются внутри строки кода, выполняются без остановки)

4. Если следующая строка кода является вызовом функции, вы выполните весь вызов функции сразу, если воспользуетесь своим ответом на # 3. (Если нет, рассмотрите другую команду для # 3!) Как вы сообщите GDB, что хотите вместо этого отладить код внутри функции (т.е. перейти внутрь функции)?

step (продолжает выполнение программы, пока управление не достигнет другой строки исходного текста, затем останавливает ее и возвращает управление GDB)

5. Как продолжить выполнение программы после остановки на точке останова?

continue (возобновление выполнения программы до ее нормального завершения)

6. Как вы можете распечатать значение переменной (или даже выражение типа 1 + 2) в gdb?

print (GDB должен вывести сообщение при возникновении данного сигнала)

7. Как настроить gdb так, чтобы он отображал значение переменной после каждого шага?

display (отображает текущие значения выражений)

8. Как вы показываете список всех переменных и их значений в текущей функции?

info locals (выводит локальные переменные выбранного кадра, каждую на отдельной строке)

9. Как выйти из GDB?

Ввод quit или C-d для выхода из GDB.
